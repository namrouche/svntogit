diff -r 84a337410705 src/main/java/org/nuxeo/ecm/platform/webdav/helpers/CoreHelper.java
--- a/src/main/java/org/nuxeo/ecm/platform/webdav/helpers/CoreHelper.java	Fri Oct 03 17:47:17 2008 +0200
+++ b/src/main/java/org/nuxeo/ecm/platform/webdav/helpers/CoreHelper.java	Thu Oct 16 17:28:54 2008 +0200
@@ -138,12 +138,16 @@
             docRef = new PathRef(docPath);
         }
 
-        try {
-            return getAssociatedCoreSession(req).getDocument(docRef);
-        } catch (ClientException e) {
+        return getAssociatedCoreSession(req).getDocument(docRef);
+         //} catch (ClientException ce) {
             // XXX probly a path containing garbage
-        }
+        	// VB-patch : DocumentSecurityException -> 403 
+        	// VB-patch : ClientException -> certainly 404 [moreover, we don't want to list documents that are in garbage]
+        //}
 
+        /* VB-patch: don't try to bypass the ClientException
+         * VB-patch: WARN - In fact I'm not sure to understand the interest of this below !
+          
         DocumentModel target = resolveVirtualPath(req, docPath, null);
 
         if (target != null) {
@@ -151,6 +155,8 @@
             URLResolverCache.addToCache(cacheableURL, target);
         }
         return target;
+        
+        */
     }
 
     /**
diff -r 84a337410705 src/main/java/org/nuxeo/ecm/platform/webdav/servlet/NuxeoWebDavServlet.java
--- a/src/main/java/org/nuxeo/ecm/platform/webdav/servlet/NuxeoWebDavServlet.java	Fri Oct 03 17:47:17 2008 +0200
+++ b/src/main/java/org/nuxeo/ecm/platform/webdav/servlet/NuxeoWebDavServlet.java	Thu Oct 16 17:28:54 2008 +0200
@@ -41,6 +41,7 @@
 import org.nuxeo.ecm.core.api.CoreSession;
 import org.nuxeo.ecm.core.api.DocumentModel;
 import org.nuxeo.ecm.core.api.DocumentRef;
+import org.nuxeo.ecm.core.api.DocumentSecurityException;
 import org.nuxeo.ecm.core.api.PathRef;
 import org.nuxeo.ecm.core.api.impl.blob.StreamingBlob;
 import org.nuxeo.ecm.platform.filemanager.api.FileManager;
@@ -77,6 +78,11 @@
         DocumentModel doc;
         try {
             doc = CoreHelper.resolveTarget(davRequest);
+        } catch (DocumentSecurityException dse) {
+        	// VB-patch : DocumentSecurityException -> 403 
+            davResponse.setStatus(WebDavConst.SC_FORBIDDEN);
+            log.debug(dse.getMessage(),dse);
+            return;
         } catch (ClientException e) {
             log.error("Error while getting document : " + e.getMessage());
             davResponse.setStatus(WebDavConst.SC_NOT_FOUND);
@@ -181,6 +187,10 @@
                     writeProperties(davResponse, requestedProperties, child,
                             maxDepth, depth + 1, davRequest);
                 }
+            } catch (DocumentSecurityException dse) {
+            	// VB-patch : DocumentSecurityException -> 403 
+                davResponse.setStatus(WebDavConst.SC_FORBIDDEN);
+                log.debug(dse.getMessage(),dse);
             } catch (ClientException e) {
                 log.error("Error while writing properties in XML Body : "
                         + e.getMessage(), e);
@@ -220,7 +230,11 @@
                 davResponse.setStatus(WebDavConst.SC_LOCKED);
                 return;
             }
-
+            
+        } catch (DocumentSecurityException dse) {
+        	// VB-patch : DocumentSecurityException -> 403 
+            davResponse.setStatus(WebDavConst.SC_FORBIDDEN);
+            log.debug(dse.getMessage(),dse);
         } catch (ClientException e) {
             e.printStackTrace();
             davResponse.setStatus(WebDavConst.SC_INTERNAL_SERVER_ERROR);
@@ -250,7 +264,10 @@
                 davResponse.setStatus(WebDavConst.SC_LOCKED);
                 return;
             }
-
+        } catch (DocumentSecurityException dse) {
+        	// VB-patch : DocumentSecurityException -> 403 
+            davResponse.setStatus(WebDavConst.SC_FORBIDDEN);
+            log.debug(dse.getMessage(),dse);
         } catch (ClientException e) {
             e.printStackTrace();
             davResponse.setStatus(WebDavConst.SC_INTERNAL_SERVER_ERROR);
@@ -291,6 +308,11 @@
         DocumentModel parent;
         try {
             parent = CoreHelper.resolveTarget(davRequest, containerPath);
+        } catch (DocumentSecurityException dse) {
+        	// VB-patch : DocumentSecurityException -> 403 
+            davResponse.setStatus(WebDavConst.SC_FORBIDDEN);
+            log.debug(dse.getMessage(),dse);
+            return;
         } catch (ClientException e) {
             log.error("Error while getting parent document : " + e.getMessage());
             davResponse.setStatus(WebDavConst.SC_INTERNAL_SERVER_ERROR);
@@ -330,6 +352,10 @@
                 davResponse.setStatus(WebDavConst.SC_METHOD_NOT_ALLOWED);
                 return;
             }
+        } catch (DocumentSecurityException dse) {
+        	// VB-patch : DocumentSecurityException -> 403 
+            davResponse.setStatus(WebDavConst.SC_FORBIDDEN);
+            log.debug(dse.getMessage(),dse);
         } catch (ClientException e) {
             log.error("Error while calling hasChildren : " + e.getMessage());
         }
@@ -387,6 +413,10 @@
             URLResolverCache.addToCache(virtualURL2, collec);
 
             session.save();
+        } catch (DocumentSecurityException dse) {
+        	// VB-patch : DocumentSecurityException -> 403 
+            davResponse.setStatus(WebDavConst.SC_FORBIDDEN);
+            log.debug(dse.getMessage(),dse);
         } catch (ClientException e) {
             log.error("Error while getting session : " + e.getMessage());
             davResponse.setStatus(WebDavConst.SC_INTERNAL_SERVER_ERROR);
@@ -538,7 +568,10 @@
             } else {
                 davResponse.setStatus(WebDavConst.SC_CREATED);
             }
-
+        } catch (DocumentSecurityException dse) {
+        	// VB-patch : DocumentSecurityException -> 403 
+            davResponse.setStatus(WebDavConst.SC_FORBIDDEN);
+            log.debug(dse.getMessage(),dse);
         } catch (ClientException e) {
             davResponse.setStatus(WebDavConst.SC_NOT_FOUND);
             log.error(e.getMessage());
@@ -614,6 +647,10 @@
                 if (existingDoc != null) {
                     alreadyExist = true;
                 }
+            } catch (DocumentSecurityException dse) {
+            	// VB-patch : DocumentSecurityException -> 403 
+                davResponse.setStatus(WebDavConst.SC_FORBIDDEN);
+                log.debug(dse.getMessage(),dse);
             } catch (ClientException e1) {
                 // TODO Auto-generated catch block
                 e1.printStackTrace();
@@ -725,13 +762,17 @@
 
             davResponse.setStatus(WebDavConst.SC_OK);
 
+        } catch (DocumentSecurityException dse) {
+        	// VB-patch : DocumentSecurityException -> 403 
+            davResponse.setStatus(WebDavConst.SC_FORBIDDEN);
+            log.debug(dse.getMessage(),dse);
         } catch (ClientException e) {
             davResponse.setStatus(WebDavConst.SC_NOT_FOUND);
-            log.error(e.getMessage());
-            e.printStackTrace();
+            log.debug(e.getMessage(),e);
+            //e.printStackTrace();
         } catch (Exception e) {
             davResponse.setStatus(WebDavConst.SC_INTERNAL_SERVER_ERROR);
-            log.error(e.getMessage());
+            log.warn(e.getMessage(),e);
         }
     }
 
@@ -745,6 +786,10 @@
             session.removeDocument(target.getRef());
             session.save();
             URLResolverCache.removeFromCache(target);
+        } catch (DocumentSecurityException dse) {
+        	// VB-patch : DocumentSecurityException -> 403 
+            davResponse.setStatus(WebDavConst.SC_FORBIDDEN);
+            log.debug(dse.getMessage(),dse);
         } catch (ClientException e) {
             davResponse.setStatus(WebDavConst.SC_NOT_FOUND);
             log.error(e.getMessage());
