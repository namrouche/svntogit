<?xml version="1.0"?>
<project name="org.esup.ecm" default="deploy" basedir=".">

  <!-- From the pom.xml -->
  <property name="name" value="esup-ecm-config"/>

	  <!-- Create a build.properties file from build.properties.sample
	       if you wish to override the JBoss paths -->
	  <property file="build.properties" />
	  <property name="jboss.dir" value="/opt/jboss" />

	  <property name="javac.debug" value="true" />
	  <property name="javac.deprecation" value="false" />


	  <!-- Boilerplate configuration -->

	  <property name="build.dir" value="target"/>
	  <property name="deploy.dir" value="${jboss.home}/server/${jboss.config}/deploy"/>
	  <property name="nuxeo.ear" value="nuxeo.ear"/>
	  <property name="mvn.opts" value="" />

	  <condition property="osfamily-unix">
	    <os family="unix" />
	  </condition>
	  <condition property="osfamily-windows">
	    <os family="windows" />
	  </condition>


	<!-- ==================== deploy Target =================================== -->
	<target name="deploy" depends="clean-target,install,copy" description="Build and copy to JBoss" />
	
	
	
	<!-- <property name="utils.dir" value="utils" /> define if esup-ecm build.xml-->
	<property name="maven.url" value="http://www.apache.org/dist/maven/binaries" />
	<property name="maven.version" value="2.2.1" />
	<property name="maven.zipfile" value="apache-maven-${maven.version}-bin.zip" />
	<property name="maven.bin" value="${utils.dir}/apache-maven-${maven.version}/bin" />

	<!-- ==================== depends-maven Target =================================== -->
	<target name="depends-maven">
		<available property="maven.dir.available" file="${maven.bin}" type="dir"/>
	</target>

	<!-- ==================== download-maven Target =================================== -->
	<target name="download-maven" unless="maven.dir.available">
		<echo message="${maven.bin} non trouve, je telecharge..."/>
		<mkdir dir="${utils.dir}"/>
		<get src="${maven.url}/${maven.zipfile}" dest="${utils.dir}/${maven.zipfile}"/>
		<unzip src="${utils.dir}/${maven.zipfile}" dest="${utils.dir}"/>
		<delete file="${utils.dir}/${maven.zipfile}"/>
		<echo message="maven.bin=${maven.bin}"/>
		<chmod dir="${maven.bin}" perm="755" includes="**/mvn*"/>
	</target>
	
	<target name="seam" depends="install">
	 <copy todir="${seam.hotdeploy.dir}" flatten="false">
	   <fileset dir="./target/classes">
	     <include name="**/*.class"/>
	   </fileset>
	 </copy>
	 <get dest="./seam_hotdeploy_result.html" src="http://127.0.0.1:8080/nuxeo/restAPI/seamReload" username="Administrator" password="Administrator"/>
	</target>

	  <target name="install" depends="depends-maven,download-maven,install-unix,install-windows" description="Build" />
	  <target name="install-unix" if="osfamily-unix">
	    <echo message="execute ${maven.bin}/mvn"/>
	    <exec executable="${maven.bin}/mvn" failonerror="false">
	      <arg value="install" />
	      <arg value="-Dmaven.test.skip=true" />
	      <arg value="-Dmaven.compiler.debug=false" />
	      <!-- Vincent : Ajout du -o pour eviter la reconnection au serveur maven nuxeo (long)-->
	<!-- Raymond : Ne fonctionne pas sur un poste "vierge"   		
	      <arg value="-o" />
     --> 
	    </exec>
	  </target>
	  <target name="install-windows" if="osfamily-windows">
	    <echo message="execute ${maven.bin}/mvn.bat"/>
	    <exec executable="cmd" failonerror="true">
	      <arg value="/c" />
	      <arg value="${maven.bin}/mvn.bat" />
	      <arg value="install" />
	      <arg value="-Dmaven.test.skip=true" />
	    </exec>
	  </target>

	  <target name="copy" description="Copy files to JBoss">
	  	<delete>
	      <!-- delete old versions of the project -->
	      <fileset file="${plugins.dir}/${name}-*.jar" />
	    </delete>
	  	<copy todir="${plugins.dir}" overwrite="true">
	      <fileset dir="${build.dir}" casesensitive="yes">
	        <include name="${name}-*.jar" />
	        <exclude name="${name}-*-sources.jar" />
	      </fileset>
	    </copy>
	    <!-- Could copy other files to .../config too -->
	  </target>

	  <target name="eclipseeclipse" depends="eclipseeclipse-unix,eclipseeclipse-windows" description="Build" />
	  <target name="eclipseeclipse-unix" if="osfamily-unix">
	    <exec executable="mvn" failonerror="true">
	      <arg value="eclipse:eclipse" />
	      <arg value="${mvn.opts}" />
	    </exec>
	  </target>
	  <target name="eclipseeclipse-windows" if="osfamily-windows">
	    <exec executable="cmd" failonerror="true">
	      <arg value="/c" />
	      <arg value="mvn.bat" />
	      <arg value="eclipse:eclipse" />
	      <arg value="${mvn.opts}" />
	    </exec>
	  </target>

	  <target name="web" description="Copy web files to a live JBoss">
	    <copy todir="${deploy.dir}/${nuxeo.ear}/nuxeo.war" overwrite="true">
	      <fileset dir="${basedir}/src/main/resources/nuxeo.war/" />
	    </copy>
	  </target>

	  <target name="nuxeo-patch-javax-qname-pb" description="Patch nuxeo-platform-transform-plugins-5.1.4.jar > xpp3-1.1.3.4.O.jar : remove javax.xml.namespace.QName">

	    <delete includeEmptyDirs="true" failonerror="false">
	      <fileset dir="${java.io.tmpdir}/nuxeo-platform-transform-plugins-tmp" />
	      <fileset dir="${java.io.tmpdir}/xpp3-tmp" />
	    </delete>

	   <unzip dest="${java.io.tmpdir}/nuxeo-platform-transform-plugins-tmp" src="${deploy.dir}/${nuxeo.ear}/system/nuxeo-platform-transform-plugins-5.1.6.jar"/> 
	   <unzip dest="${java.io.tmpdir}/xpp3-tmp" src="${java.io.tmpdir}/nuxeo-platform-transform-plugins-tmp/xpp3-1.1.3.4.O.jar"/>

	   <delete includeEmptyDirs="true" failonerror="true">
	     <fileset dir="${java.io.tmpdir}/xpp3-tmp/javax" />
	   </delete>

	   <jar destfile="${java.io.tmpdir}/nuxeo-platform-transform-plugins-tmp/xpp3-1.1.3.4.O.jar">
	      <fileset dir="${java.io.tmpdir}/xpp3-tmp"/>
	   </jar>   

	   <jar destfile="${deploy.dir}/${nuxeo.ear}/system/nuxeo-platform-transform-plugins-5.1.6.jar">
	      <fileset dir="${java.io.tmpdir}/nuxeo-platform-transform-plugins-tmp"/>
	   </jar>   

	    <delete includeEmptyDirs="true" failonerror="false">
	      <fileset dir="${java.io.tmpdir}/nuxeo-platform-transform-plugins-tmp" />
	      <fileset dir="${java.io.tmpdir}/xpp3-tmp" />
	    </delete>

	  </target>
	
	  <target name="clean-target" description="clean target">
		    <delete  dir="target"/>
	  </target>	
	
	

	<!-- dev targets -->
	<property name="lib.dir" value="${maven.jars}" />
	<property name="jarname" value="esup-ecm-config-1.0-SNAPSHOT.jar"/>
	<property name="src.dir" value="src/main/java" />
		
	
	<path id="compile.classpath">
			<fileset dir="${lib.dir}" includes="**/*.jar" />
			
	</path>

	
	<target name="compile">
			<property name="compile.debug" value="true" />
			<property name="compile.deprecation" value="true" />
			<property name="compile.optimize" value="true" />
			<javac srcdir="${src.dir}" destdir="target/classes" debug="${compile.debug}" deprecation="${compile.deprecation}" optimize="${compile.optimize}">
				<classpath refid="compile.classpath" />
			</javac>
		</target>
	
	<target name="quick-deploy" description="deploy classes in jboss" depends="compile">
			<delete file="${deploy.dir}/${nuxeo.ear}/plugins/${jarname}" />
			<mkdir dir="${deploy.dir}/${nuxeo.ear}/plugins/${jarname}" />
			<copy todir="${deploy.dir}/${nuxeo.ear}/plugins/${jarname}">
				<fileset dir="target/classes" />
			</copy>
	</target>
	
	</project>
