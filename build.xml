<project name="esup-ecm-config" default="deploy">

  <property file="build.properties"/>
  <property name="nuxeo-ep.file" value="nuxeo-ep-5.2.0-RC1-jboss-all-1.zip"/>
  <property name="nuxeo-ep-unziped.file" value="${nuxeo.dir.parent}/nuxeo-ep-5.2.0-RC1/server/default/deploy/nuxeo.ear/nuxeo.war/WEB-INF/web.xml"/>
  <property name="nuxeo-nxshell.file" value="nuxeo-shell-5.2-20080710.zip"/>
  <property name="nuxeo-nxshell-unziped.file" value="${nuxeo.dir.parent}/nuxeo-shell/run.sh"/>
  <property name="nuxeo.dir" value="${nuxeo.dir.parent}/nuxeo-ep-5.2.0-RC1"/>

  
  <property name="jboss.home" value="${nuxeo.dir}"/>
  <property name="esup-ecm.file" value="${esup-ecm.version}" />
  <condition property="isMysql" value="true">
        <equals arg1="${db.type}" arg2="MySQL"/>
  </condition>
  <condition property="isPostGresSql" value="true">
        <equals arg1="${db.type}" arg2="PostgreSQL"/>
  </condition>

  <taskdef 
      resource="net/sf/antcontrib/antlib.xml" 
      classpath="ant-utils/ant-contrib-1.0.jar"/>

  <target name="prepare">
    <mkdir  dir="build"/>
    <mkdir  dir="build"/>
    <mkdir  dir="build/jboss"/>
    <mkdir  dir="build/nxOOo"/>
    <mkdir  dir="build/esup-ecm-config-plugin"/>
    <mkdir  dir="packages"/>
  	<mkdir dir="${nuxeo.dir.parent}/nuxeo-shell"/>
    <available file="packages/${nuxeo-ep.file}" property="nuxeo-ep.file.present" />
    <available file="packages/${nuxeo-nxshell.file}" property="nuxeo-nxshell.file.present" />
    <available file="${nuxeo-ep-unziped.file}" property="nuxeo-ep.unziped.file.present" />
    <available file="${nuxeo-nxshell-unziped.file}" property="nuxeo-nxshell.unziped" />
    <antcall target="get.nuxeo-ep.file" />
    <antcall target="get.nuxeo-nxshell.file" />
  </target>
  	
	  <target name="get.nuxeo-ep.file" unless="nuxeo-ep.file.present">
	    <echo message="Download ${nuxeo-ep.file} in the packages directory."/>
	    <echo message="Ce téléchargement peut prendre plusieurs minutes..."/>
	    <get src="http://www.nuxeo.org/static/NuxeoEP/${nuxeo-ep.file}" dest="packages/${nuxeo-ep.file}" verbose="false"/>
	  </target>

	  <target name="get.nuxeo-nxshell.file" unless="nuxeo-nxshell.file.present">
	    <echo message="Download ${nuxeo-nxshell.file} in the packages directory."/>
	    <echo message="Download can last few minutes ..."/>
	    <get src="http://download.nuxeo.org/nuxeo-shell/${nuxeo-nxshell.file}" dest="packages/${nuxeo-nxshell.file}" verbose="false"/>
	  </target>

  <target name="deploy.nuxeo" depends="prepare">
  	<antcall target="deploy.nuxeo.ep" />
  	<antcall target="deploy.nuxeo.nxshell" />
  </target>
	
	<target name="deploy.nuxeo.ep" unless="nuxeo-ep.unziped.file.present">
	    <unzip src="packages/${nuxeo-ep.file}" dest="${nuxeo.dir.parent}" />
	</target>

	<target name="deploy.nuxeo.nxshell" unless="nuxeo-nxshell-unziped.file">
	    <unzip src="packages/${nuxeo-nxshell.file}" dest="${nuxeo.dir.parent}/nuxeo-shell" />
	</target>

	<target name="clean" description="clean build">
    <delete  dir="build"/>
    <delete  dir="packages"/>
    <delete  dir="esup-ecm-config-plugin/target"/>
  </target>


  <target name="copy.src.build" depends="prepare">
    <copy todir="build" overwrite="yes">
      <fileset dir="db-configs"/>
    </copy>
    <copy todir="build/jboss" overwrite="yes">
      <fileset dir="jboss"/>
    </copy>
     <copy todir="build/esup-ecm-config-plugin" overwrite="yes">
     <fileset dir="esup-ecm-config-plugin"/>
    </copy>
    <copy todir="build/nxOOo" overwrite="yes">
      <fileset dir="nxOOo"/>
    </copy>
  </target>

  <!-- special stuff mysql for Jena and Compass -->
  <target name="replace.token.config.mysql" if="isMysql" >

   <echo message="Update mysql files" />

    <replace dir="build" includes="config/*.xml,datasources/*.xml">
      <replacefilter
          token="@jdbcJenaUrl@" value="${db.mysql.jena.url}" />
      <replacefilter
          token="@jdbcCompassUrl@" value="${db.mysql.compass.url}" />
    </replace>
  </target>

  <target name="replace.token.config" depends="copy.src.build,replace.token.config.mysql">

    <echo message="Update databases description files" />

    <replace dir="build" includes="config/*.xml,config/sql.properties,datasources/*.xml">
      <replacefilter
          token="@jdbcUser@" value="${db.user}" />
      <replacefilter
          token="@jdbcPassword@" value="${db.password}" />
      <replacefilter
          token="@jdbcDriver@" value="${db.driver}" />
      <replacefilter
          token="@jdbcUrl@" value="${db.url}" />
      <replacefilter
          token="@jdbcJenaUrl@" value="${db.url}" />
      <replacefilter
          token="@databaseType@" value="${db.type}" />
      <replacefilter
          token="@jdbcCompassUrl@" value="${db.url}" />
      <replacefilter
          token="@jdbcSchema@" value="${db.schema}" />                   
      <replacefilter
          token="@sqlStorageServer@" value="${db.sql.server}" />
      <replacefilter
          token="@sqlStoragePort@" value="${db.sql.port}" />
      <replacefilter
          token="@sqlStorageDb@" value="${db.sql.db}" />
      <replacefilter
          token="@sqlStorageUser@" value="${db.sql.user}" />
      <replacefilter
          token="@sqlStoragePassword@" value="${db.sql.password}" />
    </replace>

    <echo message="Update configuration plugin files" />
    <!-- tools -->
    <replace file="build/jboss/jbossctl">
      <replacefilter token="@jbossUser@" value="${jboss.user}" />
        <replacefilter token="@jbossHome@" value="${jboss.home}" />
        <replacefilter token="@jdkHome@" value="${jdk.home}" />
        <replacefilter token="@consoleLog@" value="${jboss.console.log}" />
        <replacefilter token="@serverLog@" value="${jboss.server.log}" />
    </replace>
    <replace file="build/jboss/server.xml">
      <replacefilter token="@tomcatPortHttp@" value="${tomcat.port.http}" />
      <replacefilter token="@tomcatPortJk@" value="${tomcat.port.jk}" />
    </replace>
 
     <replace file="build/nxOOo/nxopenoffice">
      <replacefilter token="@OOoPort@" value="${openoffice.port}" />
      <replacefilter token="@OOoPath@" value="${openoffice.home}" />
    </replace> 	
  	
  	<!-- build.properties -->
    <replace file="build/esup-ecm-config-plugin/build.properties" 
	     token="@nuxeo-dir@" value="${nuxeo.dir}" />

    <!-- CAS -->
    <replace file="build/esup-ecm-config-plugin/src/main/resources/OSGI-INF/esup-login-contrib.xml" 
	     token="@sso-cas-url@" value="${cas.url}" />
    <replace file="build/esup-ecm-config-plugin/src/main/resources/OSGI-INF/esup-login-contrib.xml" 
	     token="@nuxeo-url@" value="${nuxeo.url}" />

    <!-- LDAP -->
    <replace file="build/esup-ecm-config-plugin/src/main/resources/config/default-ldap-users-directory-bundle.xml">
      <replacefilter token="@ldapUrl@" value="${ldap.url}" />
      <replacefilter token="@ldapSearchBaseDn@" value="${ldap.user.searchBaseDn}" />
      <replacefilter token="@ldapFirstName@" value="${ldap.user.firstName}" />
      <replacefilter token="@ldapLastName@" value="${ldap.user.lastName}" />
      <replacefilter token="@ldapCompagny@" value="${ldap.user.company}" />
      <replacefilter token="@ldapEmail@" value="${ldap.user.email}" />
    </replace>
    <replace file="build/esup-ecm-config-plugin/src/main/resources/config/default-ldap-groups-directory-bundle.xml">
      <replacefilter token="@ldapSearchBaseDn@" value="${ldap.group.searchBaseDn}" />
    </replace>

    <!-- Administrator ID -->
    <replace file="build/esup-ecm-config-plugin/src/main/resources/config/default-virtual-groups-bundle.xml">
      <replacefilter token="@defaultAdministratorId@" value="${ldap.user.defaultAdministratorId}" />
    </replace>

  </target>

  <!-- sqlStorage Repository -->
  <target name="deploy.sql.storage" depends="deploy.sql.storage.config.postgresql,deploy.sql.storage.config.mysql">
   <echo message="Install sql-storage repository" />
         <delete file="${nuxeo.dir}/server/default/deploy/nuxeo.ear/datasources/sql-storage-repository-mysql-ds.xml"/>
         <delete file="${nuxeo.dir}/server/default/deploy/nuxeo.ear/datasources/sql-storage-repository-postgresql-ds.xml"/>
         <delete file="${nuxeo.dir}/server/default/deploy/nuxeo.ear/config/default-repository-config.xml"/>
         <delete file="${nuxeo.dir}/server/default/deploy/nuxeo.ear/config/default-versioning-config.xml"/>
         <delete file="${nuxeo.dir}/server/default/deploy/nuxeo.ear/system/${nuxeo.core.jcr.connector}"/>
         <delete file="${nuxeo.dir}/server/default/deploy/nuxeo.ear/system/${nuxeo.core.jca}"/>
         <copy file="build/config/sql-storage-repository-config.xml"  tofile="${nuxeo.dir}/server/default/deploy/nuxeo.ear/config/default-repository-config.xml" overwrite="yes"/>
  </target>
  
  <!-- sqlStorage with mysql -->
  <target name="deploy.sql.storage.config.mysql" if="isMysql" >
   <echo message="Install sql-storage mysql" />
    <copy file="build/datasources/sql-storage-repository-mysql-ds.xml" tofile="${nuxeo.dir}/server/default/deploy/nuxeo.ear/datasources/default-repository-ds.xml"  overwrite="yes"/>
  </target>
  
  <!-- sqlStorage  with postgresql -->
  <target name="deploy.sql.storage.config.postgresql" if="isPostGresSql">
    <echo message="Install sql-storage postgresql" />
    <copy file="build/datasources/sql-storage-repository-postgresql-ds.xml" tofile="${nuxeo.dir}/server/default/deploy/nuxeo.ear/datasources/default-repository-ds.xml"  overwrite="yes"/>
  </target>

  <target name="deploy.plugin" depends="replace.token.config">

    <!-- this stuff cannot be configured with a nuxeo plugin -->
    <copy todir="${nuxeo.dir}/server/default/deploy/nuxeo.ear/datasources" overwrite="yes">
      <fileset dir="build/datasources"/>
    </copy>

    <!-- Jena database type and transaction mode -->
    <copy file="build/config/sql.properties"  tofile="${nuxeo.dir}/server/default/deploy/nuxeo.ear/config/sql.properties" overwrite="yes"/>

     <!-- usual nuxeo.properties -->
    <copy file="build/config/nuxeo.properties"  tofile="${nuxeo.dir}/server/default/deploy/nuxeo.ear/config/nuxeo.properties" overwrite="yes"/>
 
    <!-- Repository backend -->
    <antcall target="deploy.sql.storage" />

  	<!-- jboss configuration -->
    <copy file="build/jboss/jbossctl" todir="${nuxeo.dir}/bin" overwrite="yes"/>
    <chmod perm="+x"> 
      <fileset dir="${nuxeo.dir}/bin">
        <include name="**/*.sh"/>
         <include name="**/jbossctl"/>
      </fileset>
    </chmod>
    <chmod perm="+x"> 
      <fileset dir="${nuxeo.dir.parent}/nuxeo-shell">
        <include name="**/*.sh"/>
      </fileset>
    </chmod>
    <copy file="build/jboss/server.xml" tofile="${nuxeo.dir}/server/default/deploy/jboss-web.deployer/server.xml" overwrite="yes"/>

  	<!-- openoffice configuration -->
    <copy todir="${openoffice.home}/nxOOo"  overwrite="yes">
      <fileset dir="build/nxOOo"/>
    </copy>
    <chmod perm="+x"> 
      <fileset dir="${openoffice.home}/nxOOo">
        <include name="**/nxopenoffice"/>
      </fileset>
    </chmod>

    <!-- others librairies  [drivers postgres,mysql] -->
    <copy todir="${nuxeo.dir}/server/default/lib"  overwrite="yes">
      <fileset dir="lib"/>
    </copy>

    <!-- plugins addons --> 
    <copy todir="${nuxeo.dir}/server/default/deploy/nuxeo.ear/plugins"  overwrite="yes">
      <fileset dir="nuxeo-addons"/>
    </copy>
  	
    <!-- configuration plugin deploy -->
    <subant target="deploy" buildpath="build/esup-ecm-config-plugin"/>

  </target>
	
  <target name="web" description="Copy web files to a live JBoss">
    <copy todir="${jboss.home}/server/default/deploy/nuxeo.ear/nuxeo.war" overwrite="true">
      <fileset dir="${basedir}/esup-ecm-config-plugin/src/main/resources/nuxeo.war/" />
    </copy>
  </target>

  <target name="deploy" depends="deploy.nuxeo,deploy.plugin" description="Deploy" />

    <target name="buildzip" depends="prepare" description="Construct ${esup-ecm.file}.zip">
	    <echo message="Construct ${esup-ecm.file}.zip ...."/>
	    <delete file="packages/${esup-ecm.file}.zip"/>
	    <zip destfile="packages/${esup-ecm.file}.zip" >
	       <zipfileset dir="" prefix="${esup-ecm.file}">
	       	<include name="**/*"/>
            <exclude name="**/.*"/>
            <exclude name="**/build/**"/>
            <exclude name="**/bin/**"/>
            <exclude name="packages/${esup-ecm.file}.zip"/>
            <exclude name="packages/${nuxeo-ep.file}"/>
            <exclude name="packages/${nuxeo-nxshell.file}"/>
	       	<exclude name="build.properties"/>
	       </zipfileset>
	    </zip>
    </target>

    <target name="installPatchOOo" description="How to install Nuxeo patch for openoffice">
	    <echo message="Execute the following commands : "/>
	    <echo message="${openoffice.home}/program/unopkg add --shared ${openoffice.home}/nxOOo/patch/nxSkipInstallWizard.oxt
"/>
	    <echo message="${openoffice.home}/program/unopkg add --shared ${openoffice.home}/nxOOo/patch/nxOOoAutoListen.oxt
"/>
    </target>

</project>


