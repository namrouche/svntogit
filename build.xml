<project name="esup-ecm-config" default="deploy">

  <property file="build.properties"/>
  <property file="init-build.properties" />

  <property file="default.properties"/>
  <property name="jboss.log4j.level" value="INFO"/>
  <property name="nuxeo-dm.file" value="nuxeo-dm-5.2.0-jboss.zip"/>
  <property name="nuxeo-dm-unziped.file" value="${nuxeo.dir.parent}/nuxeo-dm-5.2.0/server/default/deploy/nuxeo.ear/nuxeo.war/WEB-INF/web.xml"/>
  <property name="nuxeo.dir" value="${nuxeo.dir.parent}/nuxeo-dm-5.2.0"/>
  <property name="unused.component.dir" value="unused"/>

  
  <property name="jboss.home" value="${nuxeo.dir}"/>
  <property name="esup-ecm.file" value="${esup-ecm.version}" />
  <condition property="isMysql" value="true">
        <equals arg1="${db.type}" arg2="MySQL"/>
  </condition>
  <condition property="isPostGresSql" value="true">
        <equals arg1="${db.type}" arg2="PostgreSQL"/>
  </condition>

	
  <taskdef 
      resource="net/sf/antcontrib/antlib.xml" 
      classpath="ant-utils/ant-contrib-1.0.jar"/>

  <target name="prepare">
  	<mkdir dir="${unused.component.dir}"/>
    <mkdir  dir="build"/>
    <mkdir  dir="build"/>
    <mkdir  dir="build/jboss"/>
    <mkdir  dir="build/nxOOo"/>
    <mkdir  dir="build/esup-ecm-config-plugin"/>
    <mkdir  dir="packages"/>
  	<mkdir dir="${nuxeo.dir.parent}/nuxeo-shell"/>
    <available file="packages/${nuxeo-dm.file}" property="nuxeo-dm.file.present" />
    <available file="${nuxeo-dm-unziped.file}" property="nuxeo-dm.unziped.file.present" />
    <antcall target="get.nuxeo-dm.file" />
  </target>
  	
	  <target name="get.nuxeo-dm.file" unless="nuxeo-dm.file.present">
	    <echo message="Download ${nuxeo-dm.file} in the packages directory."/>
	    <echo message="Ce téléchargement peut prendre plusieurs minutes..."/>
	    <get src="http://www.nuxeo.org/static/NuxeoEP/${nuxeo-dm.file}" dest="packages/${nuxeo-dm.file}" verbose="false"/>
	  </target>







  <target name="deploy.nuxeo" depends="prepare">
  	<antcall target="deploy.nuxeo.dm" />
  </target>
	
	<target name="deploy.nuxeo.dm" unless="nuxeo-dm.unziped.file.present">
	    <unzip src="packages/${nuxeo-dm.file}" dest="${nuxeo.dir.parent}" />
	</target>

	<target name="clean" description="clean build">
    	<delete  dir="build"/>
	    <delete  dir="packages"/>
	    <delete  dir="esup-ecm-config-plugin/target"/>
		<delete dir="${unused.component.dir}" />
	</target>


  <target name="copy.src.build" depends="prepare">
    <copy todir="build" overwrite="yes">
      <fileset dir="db-configs"/>
    </copy>
    <copy todir="build/jboss" overwrite="yes">
      <fileset dir="jboss"/>
    </copy>
  	<!-- delete to avoid unexpected deleted files -->
  	<delete dir="build/esup-ecm-config-plugin"/>
    <copy todir="build/esup-ecm-config-plugin" overwrite="yes">
     <fileset dir="esup-ecm-config-plugin"/>
    </copy>
    <copy todir="build/nxOOo" overwrite="yes">
      <fileset dir="nxOOo"/>
    </copy>
    <copy todir="build/esup-ecm-config-plugin/src/main/resources/nuxeo.war/img" overwrite="yes">
      <fileset dir="nxOOo"/>
    </copy>
  </target>

  <!-- special stuff mysql for Jena and Compass -->
  <target name="replace.token.config.mysql" if="isMysql" >

   <echo message="Update mysql files" />

    <replace dir="build" includes="config/*.xml,datasources/*.xml">
      <replacefilter
          token="@jdbcJenaUrl@" value="${db.mysql.jena.url}" />
      <replacefilter
          token="@jdbcCompassUrl@" value="${db.mysql.compass.url}" />
    </replace>
  </target>

  <target name="replace.token.config" depends="copy.src.build,replace.token.config.mysql">

    <echo message="Update databases description files" />

    <replace dir="build" includes="config/*.xml,config/sql.properties,datasources/*.xml">
      <replacefilter
          token="@jdbcUser@" value="${db.user}" />
      <replacefilter
          token="@jdbcPassword@" value="${db.password}" />
      <replacefilter
          token="@jdbcDriver@" value="${db.driver}" />
      <replacefilter
          token="@jdbcUrl@" value="${db.url}" />
      <replacefilter
          token="@jdbcJenaUrl@" value="${db.url}" />
      <replacefilter
          token="@databaseType@" value="${db.type}" />
      <replacefilter
          token="@jdbcCompassUrl@" value="${db.url}" />
      <replacefilter
          token="@jdbcSchema@" value="${db.schema}" />                   
      <replacefilter
          token="@sqlStorageServer@" value="${db.sql.server}" />
      <replacefilter
          token="@sqlStoragePort@" value="${db.sql.port}" />
      <replacefilter
          token="@sqlStorageDb@" value="${db.sql.db}" />
      <replacefilter
          token="@sqlStorageUser@" value="${db.sql.user}" />
      <replacefilter
          token="@sqlStoragePassword@" value="${db.sql.password}" />
    </replace>

    <echo message="Update configuration plugin files" />
    <!-- tools -->
    <replace file="build/jboss/jbossctl">
      <replacefilter token="@jbossUser@" value="${jboss.user}" />
        <replacefilter token="@jbossHome@" value="${jboss.home}" />
    	<replacefilter token="@jbossBindAdress@" value="${jboss.bind.address}" />
    	<replacefilter token="@jdkHome@" value="${jdk.home}" />
        <replacefilter token="@consoleLog@" value="${jboss.console.log}" />
        <replacefilter token="@serverLog@" value="${jboss.server.log}" />
    </replace>
    <replace file="build/jboss/server.xml">
      <replacefilter token="@tomcatPortHttp@" value="${tomcat.port.http}" />
      <replacefilter token="@tomcatPortJk@" value="${tomcat.port.jk}" />
    </replace>
 
    <replace file="build/jboss/jboss-log4j.xml">
      <replacefilter token="@threshold@" value="${jboss.log4j.level}" />
    </replace>
  	
     <replace file="build/nxOOo/nxopenoffice">
      <replacefilter token="@OOoPort@" value="${openoffice.port}" />
      <replacefilter token="@OOoPath@" value="${openoffice.home}" />
    </replace> 	
  	
  	<!-- build.properties -->
    <replace file="build/esup-ecm-config-plugin/build.properties" 
	     token="@nuxeo-dir@" value="${nuxeo.dir}" />
  	
  	<!-- Nuxeo properties -->
    <replace file="build/config/nuxeo.properties">
      <replacefilter token="@instanceName@" value="${ecm.instance.name}" />
      <replacefilter token="@instanceDescription@" value="${ecm.instance.description}" />
        <replacefilter token="@productName@" value="${ecm.product.name}" />
        <replacefilter token="@productversion@" value="${esup-ecm.version}" />
    </replace>

    <!-- CAS -->
    <replace file="build/esup-ecm-config-plugin/src/main/resources/OSGI-INF/esup-login-contrib.xml" 
	     token="@sso-cas-url@" value="${cas.url}" />
    <replace file="build/esup-ecm-config-plugin/src/main/resources/OSGI-INF/esup-login-contrib.xml" 
	     token="@nuxeo-url@" value="${nuxeo.url}" />

    <!-- LDAP -->
    <replace file="build/esup-ecm-config-plugin/src/main/resources/config/default-ldap-users-directory-bundle.xml">
      <replacefilter token="@ldapUrl@" value="${ldap.url}" />
      <replacefilter token="@ldapSearchBaseDn@" value="${ldap.user.searchBaseDn}" />
      <replacefilter token="@ldapFirstName@" value="${ldap.user.firstName}" />
      <replacefilter token="@ldapLastName@" value="${ldap.user.lastName}" />
      <replacefilter token="@ldapCompagny@" value="${ldap.user.company}" />
      <replacefilter token="@ldapEmail@" value="${ldap.user.email}" />
    </replace>
    <replace file="build/esup-ecm-config-plugin/src/main/resources/config/default-ldap-groups-directory-bundle.xml">
      <replacefilter token="@ldapSearchBaseDn@" value="${ldap.group.searchBaseDn}" />
    </replace>

	<!-- NOTIFICATION -->
    <replace file="build/config/notification/mail-service.xml">
      <replacefilter token="@mail.pop3.host@" value="${mail.pop3.host}" />
      <replacefilter token="@mail.smtp.host@" value="${mail.smtp.host}" />
      <replacefilter token="@mail.smtp.port@" value="${mail.smtp.port}" />
      <replacefilter token="@mail.from@" value="${mail.from}" />
    </replace>
  	<replace file="build/config/notification/notification-config.xml">
      <replacefilter token="@nuxeo-url@" value="${nuxeo.url}" />
  	  <replacefilter token="@productName@" value="${ecm.product.name}" />
    </replace>
  	
	<!-- USER SERVICES -->
    <replace file="build/esup-ecm-config-plugin/src/main/resources/OSGI-INF/esup-actions-contrib.xml">
      <replacefilter token="@showUserManager@" value="${use.users.manager}" />
      <replacefilter token="@showVocabulariesManager@" value="${use.vocabularies.manager}" />
      <replacefilter token="@showThemesManager@" value="${use.themes.manager}" />
      <replacefilter token="@showPersonnalWorkspace@" value="${show.personnal.workspace}" />
      <replacefilter token="@showUserDashBoard@" value="${show.user.dashboard}" />
    </replace>
  	
    <!-- Administrator ID -->
    <replace file="build/esup-ecm-config-plugin/src/main/resources/config/default-virtual-groups-bundle.xml">
      <replacefilter token="@defaultAdministratorId@" value="${ldap.user.defaultAdministratorId}" />
      <replacefilter token="@defaultGroup@" value="${ldap.group.defaultGroup}" />
    </replace>
  	
    <!-- logo -->
    <antcall target="_replace.local.logo" />
    <antcall target="_default.local.logo" />


  	<!-- banner background -->
	<basename property="local.banner.background.name" file="${local.banner.background.path}"/>
    <replace file="build/esup-ecm-config-plugin/src/main/resources/themes/palettes/esup-etablissementbackgrounds.properties">
      <replacefilter token="@backgroundBanner@" value="${local.banner.background.name}" />
    </replace>

  	
  </target>

	<target name="_replace.local.logo"   if="local.logo.path">
		<echo message="Install local logo" />
	    <copy file="${local.logo.path}" todir="build/esup-ecm-config-plugin/src/main/resources/nuxeo.war/img"  overwrite="yes"/>
		<basename property="local.logo.name" file="${local.logo.path}"/>
		<replace file="build/esup-ecm-config-plugin/src/main/resources/nuxeo.war/incl/esup-logo-etablissement.xhtml">
	      <replacefilter token="@logoEtablissement@" value="${local.logo.name}" />
	    </replace>
	</target>
	
	<target name="_default.local.logo"   unless="local.logo.path">
		<echo message="Install default logo" />
		<basename property="default.logo.name" file="${default.logo.path}"/>
		<replace file="build/esup-ecm-config-plugin/src/main/resources/nuxeo.war/incl/esup-logo-etablissement.xhtml">
	      <replacefilter token="@logoEtablissement@" value="${default.logo.name}" />
	    </replace>
	</target>
	
  <!-- sqlStorage Repository -->
  <target name="deploy.sql.storage" depends="deploy.sql.storage.config.postgresql,deploy.sql.storage.config.mysql">
   <echo message="Install sql-storage repository" />
         <delete file="${nuxeo.dir}/server/default/deploy/nuxeo.ear/datasources/sql-storage-repository-mysql-ds.xml"/>
         <delete file="${nuxeo.dir}/server/default/deploy/nuxeo.ear/datasources/sql-storage-repository-postgresql-ds.xml"/>
         <delete file="${nuxeo.dir}/server/default/deploy/nuxeo.ear/config/default-repository-config.xml"/>
         <delete file="${nuxeo.dir}/server/default/deploy/nuxeo.ear/config/default-versioning-config.xml"/>
         <delete file="${nuxeo.dir}/server/default/deploy/nuxeo.ear/system/${nuxeo.core.jcr.connector}"/>
         <delete file="${nuxeo.dir}/server/default/deploy/nuxeo.ear/system/${nuxeo.core.jca}"/>
         <copy file="build/config/sql-storage-repository-config.xml"  tofile="${nuxeo.dir}/server/default/deploy/nuxeo.ear/config/default-repository-config.xml" overwrite="yes"/> 		
  </target>
  
  <!-- sqlStorage with mysql -->
  <target name="deploy.sql.storage.config.mysql" if="isMysql" >
   <echo message="Install sql-storage mysql" />
    <copy file="build/datasources/sql-storage-repository-mysql-ds.xml" tofile="${nuxeo.dir}/server/default/deploy/nuxeo.ear/datasources/default-repository-ds.xml"  overwrite="yes"/>
  </target>
  
  <!-- sqlStorage  with postgresql -->
  <target name="deploy.sql.storage.config.postgresql" if="isPostGresSql">
    <echo message="Install sql-storage postgresql" />
    <copy file="build/datasources/sql-storage-repository-postgresql-ds.xml" tofile="${nuxeo.dir}/server/default/deploy/nuxeo.ear/datasources/default-repository-ds.xml"  overwrite="yes"/>
  </target>

  <target name="deploy.plugin" depends="replace.token.config">

    <!-- this stuff cannot be configured with a nuxeo plugin -->
    <copy todir="${nuxeo.dir}/server/default/deploy/nuxeo.ear/datasources" overwrite="yes">
      <fileset dir="build/datasources"/>
    </copy>

    <!-- Jena database type and transaction mode -->
    <copy file="build/config/sql.properties"  tofile="${nuxeo.dir}/server/default/deploy/nuxeo.ear/config/sql.properties" overwrite="yes"/>

     <!-- usual nuxeo.properties -->
    <copy file="build/config/nuxeo.properties"  tofile="${nuxeo.dir}/server/default/deploy/nuxeo.ear/config/nuxeo.properties" overwrite="yes"/>
 
    <!-- Repository backend -->
    <antcall target="deploy.sql.storage" />

    <!-- Notification service -->
    <copy file="build/config/notification/mail-service.xml"  tofile="${nuxeo.dir}/server/default/deploy/mail-service.xml" overwrite="yes"/>
  	<copy file="build/config/notification/notification-config.xml"  tofile="${nuxeo.dir}/server/default/deploy/nuxeo.ear/config/notification-config.xml" overwrite="yes"/>
  	
  	<!-- jboss configuration -->
    <copy file="build/jboss/jbossctl" todir="${nuxeo.dir}/bin" overwrite="yes"/>
    <chmod perm="+x"> 
      <fileset dir="${nuxeo.dir}/bin">
        <include name="**/*.sh"/>
         <include name="**/jbossctl"/>
      </fileset>
    </chmod>
    <chmod perm="+x"> 
      <fileset dir="${nuxeo.dir.parent}/nuxeo-shell">
        <include name="**/*.sh"/>
      </fileset>
    </chmod>
    <copy file="build/jboss/server.xml" tofile="${nuxeo.dir}/server/default/deploy/jboss-web.deployer/server.xml" overwrite="yes"/>
    <copy file="build/jboss/jboss-log4j.xml" tofile="${nuxeo.dir}/server/default/conf/jboss-log4j.xml" overwrite="yes"/>

  	<!-- openoffice configuration -->
    <copy todir="${openoffice.home}/nxOOo"  overwrite="yes">
      <fileset dir="build/nxOOo"/>
    </copy>
    <chmod perm="+x"> 
      <fileset dir="${openoffice.home}/nxOOo">
        <include name="**/nxopenoffice"/>
      </fileset>
    </chmod>

    <!-- others librairies  [drivers postgres,mysql] -->
    <copy todir="${nuxeo.dir}/server/default/lib"  overwrite="yes">
      <fileset dir="lib"/>
    </copy>

    <!-- plugins addons --> 
    <copy todir="${nuxeo.dir}/server/default/deploy/nuxeo.ear/plugins"  overwrite="yes">
      <fileset dir="nuxeo-addons"/>
    </copy>
  	
    <!-- Nx patches --> 
    <copy todir="${nuxeo.dir}/server/default/deploy/nuxeo.ear/system"  overwrite="yes">
      <fileset dir="nuxeo-patches"/>
    </copy>
  	
    <!-- configuration plugin deploy -->
    <subant target="deploy" buildpath="build/esup-ecm-config-plugin"/>

  </target>
	
  <target name="web" description="Copy web files to a live JBoss">
    <copy todir="${jboss.home}/server/default/deploy/nuxeo.ear/nuxeo.war" overwrite="true">
      <fileset dir="${basedir}/esup-ecm-config-plugin/src/main/resources/nuxeo.war/" />
    </copy>
  </target>
	
	<target name="manage.nuxeo.component">
		<property name="system.path" value="server/default/deploy/nuxeo.ear/system" />
		<mkdir dir="${unused.component.dir}"/>
		<if>
			<istrue value="${use.website.type}"/>
			<then>
				<move todir="${nuxeo.dir}/${system.path}" verbose="true"> 
					<fileset dir="${unused.component.dir}">
						<filename name="nuxeo-webengine-sites*.jar"/>
					</fileset>
				</move>	
			</then>
			<else>
				<move todir="${unused.component.dir}" verbose="true"> 
					<fileset dir="${nuxeo.dir}/${system.path}">
						<filename name="nuxeo-webengine-sites*.jar"/>
					</fileset>
				</move>					
			</else>
		</if>
		<if>
			<istrue value="${use.image.type}"/>
			<then>
				<move todir="${nuxeo.dir}/${system.path}" verbose="true"> 
					<fileset dir="${unused.component.dir}">
						<filename name="nuxeo-platform-imaging*.jar"/>
					</fileset>
				</move>
			</then>
			<else>
				<move todir="${unused.component.dir}" verbose="true"> 
					<fileset dir="${nuxeo.dir}/${system.path}">
						<filename name="nuxeo-platform-imaging*.jar"/>
					</fileset>
				</move>					
			</else>
		</if>
		<if>
			<istrue value="${use.forum.type}"/>
			<then>
				<move todir="${nuxeo.dir}/${system.path}" verbose="true"> 
					<fileset dir="${unused.component.dir}">
						<filename name="nuxeo-platform-forum*.jar"/>
					</fileset>
				</move>
			</then>
			<else>
				<move todir="${unused.component.dir}" verbose="true"> 
					<fileset dir="${nuxeo.dir}/${system.path}">
						<filename name="nuxeo-platform-forum*.jar"/>
					</fileset>
				</move>					
			</else>
		</if>
		<if>
			<istrue value="${use.mail.type}"/>
			<then>
				<move todir="${nuxeo.dir}/${system.path}" verbose="true"> 
					<fileset dir="${unused.component.dir}">
						<filename name="nuxeo-platform-mail-*.jar"/>
					</fileset>
				</move>
			</then>
			<else>
				<move todir="${unused.component.dir}" verbose="true"> 
					<fileset dir="${nuxeo.dir}/${system.path}">
						<filename name="nuxeo-platform-mail-*.jar"/>
					</fileset>
				</move>					
			</else>
		</if>
		<if>
			<istrue value="${use.virtual.navigation}"/>
			<then>
				<move todir="${nuxeo.dir}/${system.path}" verbose="true"> 
					<fileset dir="${unused.component.dir}">
						<filename name="nuxeo-platform-virtualnavigation-web*.jar"/>
					</fileset>
				</move>
			</then>
			<else>
				<move todir="${unused.component.dir}" verbose="true"> 
					<fileset dir="${nuxeo.dir}/${system.path}">
						<filename name="nuxeo-platform-virtualnavigation-web*.jar"/>
					</fileset>
				</move>					
			</else>
		</if>
	</target>

  <target name="deploy" depends="deploy.nuxeo,deploy.plugin,manage.nuxeo.component" description="Deploy" />

    <target name="buildzip" depends="prepare" description="Construct ${esup-ecm.file}.zip">
	    <echo message="Construct ${esup-ecm.file}.zip ...."/>
	    <delete file="packages/${esup-ecm.file}.zip"/>
	    <zip destfile="packages/${esup-ecm.file}.zip" >
	       <zipfileset dir="" prefix="${esup-ecm.file}">
	       	<include name="**/*"/>
            <exclude name="**/.*"/>
            <exclude name="**/build/**"/>
            <exclude name="**/bin/**"/>
            <exclude name="packages/${esup-ecm.file}.zip"/>
            <exclude name="packages/${nuxeo-dm.file}"/>
	       	<exclude name="build.properties"/>
	       </zipfileset>
	    </zip>
    </target>

    <target name="installPatchOOo" description="How to install Nuxeo patch for openoffice">
	    <echo message="Execute the following commands : "/>
	    <echo message="${openoffice.home}/program/unopkg add --shared ${openoffice.home}/nxOOo/patch/nxSkipInstallWizard.oxt
"/>
	    <echo message="${openoffice.home}/program/unopkg add --shared ${openoffice.home}/nxOOo/patch/nxOOoAutoListen.oxt
"/>
    </target>















	
	<!-- ==================== Target :: Remplacement des paramètres depuis le fichier central =================================== -->
	
	<property name="commons.parameters.local.file" value="commons-parameters.properties" />
	
	
	<!-- Télécharge le fichier de propriétés -->
	<target name="download-commons.parameters.local.file" if="commons.parameters.central.file.url">
		<echo message="je copie en local ${commons.parameters.central.file.url} ..."/>
		<get dest="${commons.parameters.local.file}" src="${commons.parameters.central.file.url}"/>
	</target>
	
	
	<!-- Teste si le fichier de propriétés local existe -->
	<target name="test-available-commons.parameters.local.file">
		<available file="${commons.parameters.local.file}" property="commons.parameters.local.file.exists"/>
		<echo message="${commons.parameters.local.file} existe ? ${commons.parameters.local.file.exists}"/>
	</target>


	<!-- Copie init-build.properties en build.properties -->
	<target name="init-build.properties" depends="download-commons.parameters.local.file,test-available-commons.parameters.local.file" if="commons.parameters.local.file.exists">
		<echo message="initialise le fichier build.properties"/>
		
		<echo message="${commons.parameters.local.file}"/>
		
		<delete file="build.properties" />
		
		<copy file="init-build.properties" tofile="build.properties">
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ReplaceTokens"/>
			</filterchain>
			<filterset
				begintoken="["
				endtoken="]"
				filtersfile="${commons.parameters.local.file}"/>
		</copy>
		
		<echo message="remplacement des paramètres effectué dans build.properties !"/>
	</target>


	
	
	<!-- Replace the values -->
	<target name="init-build" depends="init-build.properties" description="Initialise le fichier build.properties avec le remplacement des variables">
		<if>
			<equals arg1="${from.quick.install}" arg2="true" />
			<then>
				<echo message="on change la valeur de commons.parameters.central.file.url dans init-build.properties ..." />
				<replace
					file="init-build.properties"
					dir="."
					value="${commons.parameters.central.file.url}">
					<include name="init-build.properties"/>
					<include name="build.properties"/>
					<replacetoken>[COMMONS_PARAMETERS_CENTRAL_FILE_URL]</replacetoken>
				</replace>
				<replace
					dir="."
					value="/">
					<include name="init-build.properties"/>
					<include name="build.properties"/>
					<replacetoken>\</replacetoken>
				</replace>
			</then>
			<else>
				<echo message="on ne change pas la valeur de commons.parameters.central.file.url dans init-build.properties ..." />
			</else>
		</if>
	</target>







</project>


